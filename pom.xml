<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright (c) 2014-2020 Linagora

 This program/library is free software: you can redistribute it and/or modify
 it under the terms of the GNU Lesser General Public License as published by
 the Free Software Foundation, either version 2.1 of the License, or (at your
 option) any later version.

 This program/library is distributed in the hope that it will be useful, but
 WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License
 for more details.

 You should have received a copy of the GNU Lesser General Public License
 along with this program/library; If not, see http://www.gnu.org/licenses/
 for the GNU Lesser General Public License version 2.1.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <artifactId>petals-cdkbased-components-parent</artifactId>
      <groupId>org.ow2.petals</groupId>
      <relativePath />
      <version>1.1.0.2</version>
   </parent>

	<!-- ============== -->
	<!-- Identification -->
	<!-- ============== -->
   <name>Petals ESB - Components - SE Flowable (BPMN 2.0)</name>
   <artifactId>petals-se-flowable</artifactId>
   <groupId>org.ow2.petals</groupId>
   <version>1.2.3-SNAPSHOT</version>
   <packaging>jbi-component</packaging>
   <description>BPMN Service Engine based on Flowable</description>

   <developers>
      <developer>
         <name>Bertrand Escudie </name>
         <email>bescudie@linagora.com</email>
         <id>bescudie</id>
         <organization>Linagora</organization>
         <organizationUrl>http://www.linagora.com</organizationUrl>
         <roles>
            <role>Product Owner</role>
         </roles>
         <timezone>+1</timezone>
      </developer>
   </developers>

   <properties>
      <!--flowable.version>6.2.1</flowable.version-->
      <!--flowable.groupId>org.flowable</flowable.groupId-->
      <flowable.version>6.2.1-PETALS-1</flowable.version>
      <flowable.groupId>org.ow2.petals.flowable</flowable.groupId>
   </properties>

   <dependencyManagement>
      <dependencies>
         <dependency>
            <!-- Align flowable-rest dependency with the one of CDK -->
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.6</version>
         </dependency>
         <dependency>
            <!-- Align flowable-rest dependency with the one of Flowable's Jackson -->
            <groupId>com.fasterxml.jackson</groupId>
            <artifactId>jackson-bom</artifactId>
            <version>2.8.10</version>
            <scope>import</scope>
            <type>pom</type>
         </dependency>
         <dependency>
            <!-- Align flowable-rest dependency with the one of Flowable's Jackson
                 jackson-annotations is set to 2.8.0 in the bom but some dependencies
                 are using the full version -->
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>2.8.10</version>
         </dependency>
         <dependency>
            <!-- Jetty version required by Apache CXF. -->
            <!-- TODO: To move to Jetty 9.4+ when CXF 3.2+ will be used -->
            <groupId>cz.jirutka.maven</groupId>
            <artifactId>jetty-bom</artifactId>
            <version>9.2.20.v20161216</version>
            <scope>import</scope>
            <type>pom</type>
         </dependency>
         <dependency>
            <!-- Align spring dependencies with the ones of Flowable -->
            <groupId>org.springframework</groupId>
            <artifactId>spring-framework-bom</artifactId>
            <version>4.3.9.RELEASE</version>
            <scope>import</scope>
            <type>pom</type>
         </dependency>
         <dependency>
            <!-- Align spring dependencies with the ones of Flowable -->
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-bom</artifactId>
            <version>4.2.3.RELEASE</version>
            <scope>import</scope>
            <type>pom</type>
         </dependency>
         <dependency>
            <groupId>${flowable.groupId}</groupId>
            <artifactId>flowable-engine-common</artifactId>
            <version>${flowable.version}</version>
            <exclusions>
               <exclusion>
                  <!-- The SLF bridge 'jcl-over-slf4j' is used to redirect JCL calls to SLF4J API,
                       so commons-logging must be excluded -->
                  <groupId>commons-logging</groupId>
                  <artifactId>commons-logging</artifactId>
               </exclusion>
               <exclusion>
                  <!-- The SLF bridge 'log4j-over-slf4j' is used to redirect Log4J calls to SLF4J API,
                       so commons-logging must be excluded -->
                  <groupId>log4j</groupId>
                  <artifactId>log4j</artifactId>
               </exclusion>
            </exclusions>
         </dependency>
         <dependency>
            <groupId>${flowable.groupId}</groupId>
            <artifactId>flowable-engine</artifactId>
            <version>${flowable.version}</version>
            <exclusions>
               <exclusion>
                  <!-- The SLF bridge 'jcl-over-slf4j' is used to redirect JCL calls to SLF4J API,
                       so commons-logging must be excluded -->
                  <groupId>commons-logging</groupId>
                  <artifactId>commons-logging</artifactId>
               </exclusion>
               <exclusion>
                  <!-- The SLF bridge 'log4j-over-slf4j' is used to redirect Log4J calls to SLF4J API,
                       so commons-logging must be excluded -->
                  <groupId>log4j</groupId>
                  <artifactId>log4j</artifactId>
               </exclusion>
               <exclusion>
                  <!-- We use javax.mail -->
                  <artifactId>mail</artifactId>
                  <groupId>javax.mail</groupId>
               </exclusion>
            </exclusions>
         </dependency>
         <dependency>
            <!-- flowable-cxf add support of WSDL-based services to the Flowable engine to call Petals services -->
            <groupId>${flowable.groupId}</groupId>
            <artifactId>flowable-cxf</artifactId>
            <version>${flowable.version}</version>
            <exclusions>
               <exclusion>
                  <!-- Already included in Java 6 -->
                  <groupId>xml-apis</groupId>
                  <artifactId>xml-apis</artifactId>
               </exclusion>
            </exclusions>
         </dependency>
      </dependencies>
   </dependencyManagement>

   <dependencies>
      <dependency>
         <groupId>org.ow2.easycommons</groupId>
         <artifactId>easycommons-util</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.easycommons</groupId>
         <artifactId>easycommons-lang</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.easycommons</groupId>
         <artifactId>easycommons-uuid</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.easycommons</groupId>
         <artifactId>easycommons-stream</artifactId>
      </dependency>
      <dependency>
         <groupId>org.apache.commons</groupId>
         <artifactId>commons-pool2</artifactId>
      </dependency>
      <dependency>
         <groupId>org.jvnet.jaxb2_commons</groupId>
         <artifactId>jaxb2-basics-runtime</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-commons-log</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.easywsdl</groupId>
         <artifactId>easywsdl-wsdl</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-cdk-core</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-cdk-api</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-jbi</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-jbi-descriptor</artifactId>
         <!-- This dependency is directly used by unit tests but it is also
              a transitive dependency of CDK, so we can't use scope 'test' -->
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-cdk-jbidescriptor</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-cdk-steplog</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-message-exchange</artifactId>
         <version>1.3.0</version>
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-probes-api</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-cdk-clientserver-api</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-basis-api</artifactId>
         <version>1.1.0</version>
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-se-flowable-clientserver-api</artifactId>
         <version>1.1.1</version>
      </dependency>
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-engine-common-api</artifactId>
         <version>${flowable.version}</version>
      </dependency>
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-engine-common</artifactId>
      </dependency>
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-engine</artifactId>
      </dependency>
      <dependency>
         <groupId>org.mybatis</groupId>
         <artifactId>mybatis</artifactId>
         <version>3.4.1</version>
      </dependency>
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-bpmn-converter</artifactId>
         <version>${flowable.version}</version>
      </dependency>
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-bpmn-model</artifactId>
         <version>${flowable.version}</version>
      </dependency>
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-idm-api</artifactId>
         <version>${flowable.version}</version>
      </dependency>
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-idm-engine</artifactId>
         <version>${flowable.version}</version>
         <exclusions>
            <exclusion>
               <!-- The SLF bridge 'jcl-over-slf4j' is used to redirect JCL calls to SLF4J API,
                    so commons-logging must be excluded -->
               <groupId>commons-logging</groupId>
               <artifactId>commons-logging</artifactId>
            </exclusion>
            <exclusion>
               <!-- The SLF bridge 'log4j-over-slf4j' is used to redirect Log4J calls to SLF4J API,
                    so commons-logging must be excluded -->
               <groupId>log4j</groupId>
               <artifactId>log4j</artifactId>
            </exclusion>
         </exclusions>
      </dependency>
      <dependency>
         <!-- flowable-cxf add support of WSDL-based services to the Flowable engine to call Petals services -->
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-cxf</artifactId>
      </dependency>
      <dependency>
         <!-- Dependency required by the Petals transporter. The version must be aligned with the CXF embedded by flowable-cxf. -->
         <groupId>org.apache.cxf</groupId>
         <artifactId>cxf-core</artifactId>
         <version>3.1.6</version>
      </dependency>
      <dependency>
         <!-- flowable-ldap add support of LDAP integration -->
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-ldap</artifactId>
         <version>${flowable.version}</version>
      </dependency>
      <dependency>
         <!-- flowable-ldap-configurator add support of LDAP integration -->
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-ldap-configurator</artifactId>
         <version>${flowable.version}</version>
      </dependency>
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-job-service-api</artifactId>
         <version>${flowable.version}</version>
      </dependency>
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-job-service</artifactId>
         <version>${flowable.version}</version>
      </dependency>
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-task-service-api</artifactId>
         <version>${flowable.version}</version>
      </dependency>
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-task-service</artifactId>
         <version>${flowable.version}</version>
      </dependency>
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-variable-service-api</artifactId>
         <version>${flowable.version}</version>
      </dependency>

      <!-- Flowable REST API dependencies -->
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-rest</artifactId>
         <version>${flowable.version}</version>
      </dependency>
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-common-rest</artifactId>
         <version>${flowable.version}</version>
         <exclusions>
            <exclusion>
               <!-- aopalliance:aopalliance is already packaged into spring-aop, but with different classes. We 
                    choose arbitrarly spring-aop -->
               <groupId>aopalliance</groupId>
               <artifactId>aopalliance</artifactId>
            </exclusion>
         </exclusions>
      </dependency>
      <dependency>
         <groupId>com.fasterxml.jackson.core</groupId>
         <artifactId>jackson-databind</artifactId>
      </dependency>
      <dependency>
         <groupId>org.eclipse.jetty</groupId>
         <artifactId>jetty-server</artifactId>
      </dependency>
      <dependency>
         <groupId>org.eclipse.jetty</groupId>
         <artifactId>jetty-servlet</artifactId>
      </dependency>
      <dependency>
         <groupId>javax.servlet</groupId>
         <artifactId>javax.servlet-api</artifactId>
         <version>3.1.0</version>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-web</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-webmvc</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-context</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-beans</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework.security</groupId>
         <artifactId>spring-security-core</artifactId>
         <exclusions>
            <exclusion>
               <!-- aopalliance:aopalliance is already packaged into spring-aop, but with different classes. We 
                    choose arbitrarly spring-aop -->
               <groupId>aopalliance</groupId>
               <artifactId>aopalliance</artifactId>
            </exclusion>
         </exclusions>
      </dependency>
      <dependency>
         <groupId>org.springframework.security</groupId>
         <artifactId>spring-security-config</artifactId>
         <exclusions>
            <exclusion>
               <!-- aopalliance:aopalliance is already packaged into spring-aop, but with different classes. We 
                    choose arbitrarly spring-aop -->
               <groupId>aopalliance</groupId>
               <artifactId>aopalliance</artifactId>
            </exclusion>
         </exclusions>
      </dependency>

      <dependency>
         <!-- TODO: The JDBC Driver should be set as shared library. How to set the default one ? -->
         <groupId>com.h2database</groupId>
         <artifactId>h2</artifactId>
         <version>1.4.178</version>
         <scope>runtime</scope>
      </dependency>

      <dependency>
         <!-- The SLF bridge 'log4j-over-slf4j' is required by the flowable-engine -->
         <groupId>org.slf4j</groupId>
         <artifactId>log4j-over-slf4j</artifactId>
         <!-- scope 'provided', it is provided by the petals-bootstrap-launcher -->
      </dependency>
      
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-cdk-junit</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-junit-external-resources</artifactId>
         <scope>test</scope>
         <exclusions>
            <exclusion>
               <!-- flowable-cxf requires a version of CXF requiring Jetty 9.2.x, so we force to use it.
                    TODO: To remove when CXF 3.2 will be used by flowable-cxf -->
               <groupId>org.eclipse.jetty</groupId>
               <artifactId>jetty-server</artifactId>
            </exclusion>
            <exclusion>
               <!-- flowable-cxf requires a version of CXF requiring Jetty 9.2.x, so we force to use it.
                    TODO: To remove when CXF 3.2 will be used by flowable-cxf -->
               <groupId>org.eclipse.jetty</groupId>
               <artifactId>jetty-http</artifactId>
            </exclusion>
            <exclusion>
               <!-- flowable-cxf requires a version of CXF requiring Jetty 9.2.x, so we force to use it.
                    TODO: To remove when CXF 3.2 will be used by flowable-cxf -->
               <groupId>org.eclipse.jetty</groupId>
               <artifactId>jetty-util</artifactId>
            </exclusion>
            <exclusion>
               <!-- flowable-cxf requires a version of CXF requiring Jetty 9.2.x, so we force to use it.
                    TODO: To remove when CXF 3.2 will be used by flowable-cxf -->
               <groupId>org.eclipse.jetty</groupId>
               <artifactId>jetty-servlet</artifactId>
            </exclusion>
         </exclusions>
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-se-flowable-test-utils</artifactId>
         <version>1.1.2</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.zapodot</groupId>
         <artifactId>embedded-ldap-junit</artifactId>
         <version>0.5.2</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>javax.ws.rs</groupId>
         <artifactId>javax.ws.rs-api</artifactId>
         <version>2.0.1</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.glassfish.jersey.core</groupId>
         <artifactId>jersey-client</artifactId>
         <version>2.25.1</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.glassfish.jersey.media</groupId>
         <artifactId>jersey-media-json-jackson</artifactId>
         <version>2.25.1</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.hamcrest</groupId>
         <artifactId>hamcrest-core</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.apache.mina</groupId>
         <artifactId>mina-core</artifactId>
         <version>2.0.4</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.codehaus.groovy</groupId>
         <artifactId>groovy-all</artifactId>
         <version>2.4.15</version>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
               <execution>
                  <id>analyze</id>
                  <configuration>
                     <usedDependencies>
                        <!-- These dependencies are needed for runtime -->
                        <usedDependency>org.glassfish.jersey.media:jersey-media-json-jackson</usedDependency>
                        <!-- These dependencies are needed for test at runtime -->
                        <usedDependency>org.codehaus.groovy:groovy-all</usedDependency>
                     </usedDependencies>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.jvnet.jaxb2.maven2</groupId>
            <artifactId>maven-jaxb2-plugin</artifactId>
            <executions>
               <execution>
                  <!-- must use the same id as in the parent if not there will be two executions of the plugin -->
                  <id>generate</id>
                  <goals>
                     <goal>generate</goal>
                  </goals>
                  <phase>generate-sources</phase>
                  <configuration>
                     <addCompileSourceRoot>true</addCompileSourceRoot>
                     <addTestCompileSourceRoot>false</addTestCompileSourceRoot>
                     <schemaDirectory>${basedir}/src/main/resources/</schemaDirectory>
                     <schemaIncludes>
                        <include>component.wsdl</include>
                     </schemaIncludes>
                  </configuration>
               </execution>
               <execution>
                  <id>generate-test</id>
                  <goals>
                     <goal>generate</goal>
                  </goals>
                  <phase>generate-test-sources</phase>
                  <configuration>
                     <addCompileSourceRoot>false</addCompileSourceRoot>
                     <addTestCompileSourceRoot>true</addTestCompileSourceRoot>
                     <schemaDirectory>${basedir}/src/test/resources/su/</schemaDirectory>
                     <schemaIncludes>
                        <include>vacation/vacationRequest.wsdl</include>
                        <include>vacation/archivageService.wsdl</include>
                        <include>multi-start/multi-start.wsdl</include>
                        <include>multi-start/archivageService.wsdl</include>
                        <include>multi-start/coreService.wsdl</include>
                        <include>call-activity/call-activity.wsdl</include>
                        <include>call-activity/archivageService.wsdl</include>
                        <include>call-activity/coreService.wsdl</include>
                        <include>intermediate-message-catch-event/intermediate-message-catch-event.wsdl</include>
                        <include>intermediate-message-catch-event/intermediate-message-catch-event-loop.wsdl</include>
                        <include>placeholders/placeholders.wsdl</include>
                        <include>placeholders/archivageService.wsdl</include>
                        <include>in-only/in-only.wsdl</include>
                        <include>in-only/archivageService.wsdl</include>
                        <include>robust-in-only/robust-in-only.wsdl</include>
                        <include>robust-in-only/archivageService.wsdl</include>
                        <include>robustified-in-only/robustified-in-only.wsdl</include>
                        <include>robustified-in-only/archivageService.wsdl</include>
                        <include>start-stop/start-stop.wsdl</include>
                        <include>timeout/timeout.wsdl</include>
                        <include>timeout/archivageService.wsdl</include>
                     </schemaIncludes>
                     <generateDirectory>${project.build.directory}/generated-test-sources/xjc</generateDirectory>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.basepom.maven</groupId>
            <artifactId>duplicate-finder-maven-plugin</artifactId>
            <executions>
               <execution>
                  <id>enforce-no-duplicate-classes</id>
                  <configuration>
                     <!-- these conflicts, but they are only used (and needed!) during tests! -->
                     <ignoredDependencies>
                        <ignoredDependency>
                           <!-- conflicts with flowable/spring aopalliance package -->
                           <groupId>org.glassfish.hk2.external</groupId>
                           <artifactId>aopalliance-repackaged</artifactId>
                           <scope>test</scope>
                        </ignoredDependency>
                        <ignoredDependency>
                           <!-- conflicts with flowable jsr250-api package -->
                           <groupId>javax.annotation</groupId>
                           <artifactId>javax.annotation-api</artifactId>
                           <scope>test</scope>
                        </ignoredDependency>
                     </ignoredDependencies>
                  </configuration>
               </execution>
            </executions>
         </plugin>
      </plugins>
   </build>

   <scm>
      <connection>scm:git:https://github.com/petalslink/petals-se-flowable.git</connection>
      <developerConnection>scm:git:https://github.com/petalslink/petals-se-flowable.git</developerConnection>
      <tag>petals-se-flowable-1.2.2</tag>
   </scm>
</project>
