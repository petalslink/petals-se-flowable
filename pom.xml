<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright (c) 2014-2024 Linagora

 This program/library is free software: you can redistribute it and/or modify
 it under the terms of the GNU Lesser General Public License as published by
 the Free Software Foundation, either version 2.1 of the License, or (at your
 option) any later version.

 This program/library is distributed in the hope that it will be useful, but
 WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License
 for more details.

 You should have received a copy of the GNU Lesser General Public License
 along with this program/library; If not, see http://www.gnu.org/licenses/
 for the GNU Lesser General Public License version 2.1.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <artifactId>petals-cdkbased-components-parent</artifactId>
      <groupId>org.ow2.petals</groupId>
      <relativePath />
      <version>1.2.1-SNAPSHOT</version>
   </parent>

   <name>Petals ESB - Components - SE Flowable (BPMN 2.0)</name>
   <artifactId>petals-se-flowable</artifactId>
   <groupId>org.ow2.petals</groupId>
   <version>1.4.1-SNAPSHOT</version>
   <packaging>jbi-component</packaging>
   <description>BPMN Service Engine based on Flowable</description>

   <developers>
      <developer>
         <name>Christophe DENEUX</name>
         <email>cdeneux@linagora.com</email>
         <id>cdeneux</id>
         <organization>Linagora</organization>
         <organizationUrl>http://www.linagora.com</organizationUrl>
         <roles>
            <role>Technical leader</role>
         </roles>
         <timezone>+1</timezone>
      </developer>
      <developer>
         <name>Bertrand ESCUDIE</name>
         <email>bescudie@linagora.com</email>
         <id>bescudie</id>
         <organization>Linagora</organization>
         <organizationUrl>http://www.linagora.com</organizationUrl>
         <roles>
            <role>Product Owner</role>
         </roles>
         <timezone>+1</timezone>
      </developer>
   </developers>

   <properties>
      <flowable.version>6.7.2</flowable.version>
      <flowable.groupId>org.flowable</flowable.groupId>
      <!-- flowable.version>6.4.2-PETALS-0-SNAPSHOT</flowable.version>
      <flowable.groupId>org.ow2.petals.flowable</flowable.groupId -->
      
      <!-- Groovy version aligned with the one provided by Flowable -->
      <groovy.version>3.0.9</groovy.version>
      
      <jetty.version>9.4.44.v20210927</jetty.version>
      <spring-framework.version>5.3.14</spring-framework.version>
      <spring-security.version>5.5.2</spring-security.version>
      <jersey.version>2.33</jersey.version>
      <jackson.version>2.13.1</jackson.version>
   </properties>

   <dependencyManagement>
      <dependencies>
         <dependency>
            <!-- Align Jackson version over Flowable and Jersey -->
            <groupId>com.fasterxml.jackson</groupId>
            <artifactId>jackson-bom</artifactId>
            <version>${jackson.version}</version>
            <scope>import</scope>
            <type>pom</type>
         </dependency>
         <dependency>
            <!-- Align Jetty version over Apache CXF, Flowable and Petals. -->
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-bom</artifactId>
            <version>${jetty.version}</version>
            <scope>import</scope>
            <type>pom</type>
         </dependency>
         <dependency>
            <!-- Align spring dependencies with the ones of Flowable -->
            <groupId>org.springframework</groupId>
            <artifactId>spring-framework-bom</artifactId>
            <version>${spring-framework.version}</version>
            <scope>import</scope>
            <type>pom</type>
         </dependency>
         <dependency>
            <!-- Align spring dependencies with the ones of Flowable -->
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-bom</artifactId>
            <version>${spring-security.version}</version>
            <scope>import</scope>
            <type>pom</type>
         </dependency>
         <dependency>
            <groupId>${flowable.groupId}</groupId>
            <artifactId>flowable-engine</artifactId>
            <version>${flowable.version}</version>
            <exclusions>
               <exclusion>
                  <!-- Moving to Java 11, we prefer com.sun.activation:jakarta.activation provided by Petals CDK -->
                  <groupId>javax.activation</groupId>
                  <artifactId>activation</artifactId>
               </exclusion>
               <exclusion>
                  <!-- Moving to Java 11, we prefer com.sun.mail:jakarta.mail provided by petals-message-exchange -->
                  <groupId>com.sun.mail</groupId>
                  <artifactId>javax.mail</artifactId>
               </exclusion>
               <exclusion>
                  <!-- The SLF bridge 'jcl-over-slf4j' is used to redirect JCL calls to SLF4J API,
                       so commons-logging must be excluded -->
                  <groupId>commons-logging</groupId>
                  <artifactId>commons-logging</artifactId>
               </exclusion>
               <exclusion>
                  <!-- We prefer to use the SLF bridge 'jcl-over-slf4j' to redirect JCL calls to SLF4J API -->
                  <groupId>org.springframework</groupId>
                  <artifactId>spring-jcl</artifactId>
               </exclusion>
            </exclusions>
         </dependency>
         <dependency>
            <!-- flowable-cxf adds support of WSDL-based services to the Flowable engine to call Petals services -->
            <groupId>${flowable.groupId}</groupId>
            <artifactId>flowable-cxf</artifactId>
            <version>${flowable.version}</version>
         </dependency>
         <dependency>
            <!-- Align dependency 'net.bytebuddy:byte-buddy' between Mockito and embedded-ldap-junit -->
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy</artifactId>
            <version>1.10.19</version>
         </dependency>
      </dependencies>
   </dependencyManagement>

   <dependencies>
      <dependency>
         <groupId>org.ow2.easycommons</groupId>
         <artifactId>easycommons-util</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.easycommons</groupId>
         <artifactId>easycommons-lang</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.easycommons</groupId>
         <artifactId>easycommons-uuid</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.easycommons</groupId>
         <artifactId>easycommons-stream</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.easycommons</groupId>
         <artifactId>easycommons-json</artifactId>
         <version>1.2.0</version>
      </dependency>
      <dependency>
         <groupId>org.apache.commons</groupId>
         <artifactId>commons-pool2</artifactId>
      </dependency>
      <dependency>
         <groupId>org.jvnet.jaxb2_commons</groupId>
         <artifactId>jaxb2-basics-runtime</artifactId>
      </dependency>
      <dependency>
         <groupId>jakarta.xml.bind</groupId>
         <artifactId>jakarta.xml.bind-api</artifactId>
         <exclusions>
            <exclusion>
               <!-- Already included in com.sun.activation:jakarta.activation provided by Petals CDK -->
               <groupId>jakarta.activation</groupId>
               <artifactId>jakarta.activation-api</artifactId>
            </exclusion>
         </exclusions>
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-commons-log</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.easywsdl</groupId>
         <artifactId>easywsdl-wsdl</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-cdk-core</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-cdk-api</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-jbi</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-jbi-descriptor</artifactId>
         <!-- This dependency is directly used by unit tests but it is also
              a transitive dependency of CDK, so we can't use scope 'test' -->
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-cdk-jbidescriptor</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-cdk-steplog</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-message-exchange</artifactId>
         <version>1.4.0</version>
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-probes-api</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-cdk-clientserver-api</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-basis-api</artifactId>
         <version>1.2.0</version>
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-se-flowable-clientserver-api</artifactId>
         <version>1.2.0</version>
      </dependency>
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-engine-common-api</artifactId>
         <version>${flowable.version}</version>
      </dependency>
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-engine-common</artifactId>
         <version>${flowable.version}</version>
      </dependency>
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-engine</artifactId>
      </dependency>
      <dependency>
         <groupId>org.mybatis</groupId>
         <artifactId>mybatis</artifactId>
         <version>3.5.7</version>
      </dependency>
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-bpmn-converter</artifactId>
         <version>${flowable.version}</version>
      </dependency>
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-bpmn-model</artifactId>
         <version>${flowable.version}</version>
      </dependency>
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-idm-api</artifactId>
         <version>${flowable.version}</version>
      </dependency>
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-idm-engine</artifactId>
         <version>${flowable.version}</version>
         <exclusions>
            <exclusion>
               <!-- The SLF bridge 'jcl-over-slf4j' is used to redirect JCL calls to SLF4J API,
                    so commons-logging must be excluded -->
               <groupId>commons-logging</groupId>
               <artifactId>commons-logging</artifactId>
            </exclusion>
         </exclusions>
      </dependency>
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-idm-engine-configurator</artifactId>
         <version>${flowable.version}</version>
      </dependency>
      <dependency>
         <!-- flowable-cxf add support of WSDL-based services to the Flowable engine to call Petals services -->
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-cxf</artifactId>
      </dependency>
      <dependency>
         <!-- Dependency required by the Petals transporter. The version must be aligned with the CXF embedded by flowable-cxf. -->
         <groupId>org.apache.cxf</groupId>
         <artifactId>cxf-core</artifactId>
         <version>3.4.2</version>
      </dependency>
      <dependency>
         <!-- flowable-ldap add support of LDAP integration -->
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-ldap</artifactId>
         <version>${flowable.version}</version>
      </dependency>
      <dependency>
         <!-- flowable-ldap-configurator add support of LDAP integration -->
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-ldap-configurator</artifactId>
         <version>${flowable.version}</version>
      </dependency>
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-job-service-api</artifactId>
         <version>${flowable.version}</version>
      </dependency>
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-job-service</artifactId>
         <version>${flowable.version}</version>
      </dependency>
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-task-service-api</artifactId>
         <version>${flowable.version}</version>
      </dependency>
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-task-service</artifactId>
         <version>${flowable.version}</version>
      </dependency>
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-variable-service-api</artifactId>
         <version>${flowable.version}</version>
      </dependency>

      <!-- Flowable REST API dependencies -->
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-rest</artifactId>
         <version>${flowable.version}</version>
         <exclusions>
            <exclusion>
               <!-- We prefer jakarta.annotation:jakarta.annotation-api coming with flowable-cxf -->
               <groupId>javax.annotation</groupId>
               <artifactId>jsr250-api</artifactId>
            </exclusion>
         </exclusions>
      </dependency>
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-common-rest</artifactId>
         <version>${flowable.version}</version>
         <exclusions>
            <exclusion>
               <!-- We prefer to use the SLF bridge 'jcl-over-slf4j' to redirect JCL calls to SLF4J API -->
               <groupId>org.springframework</groupId>
               <artifactId>spring-jcl</artifactId>
            </exclusion>
         </exclusions>
      </dependency>
      <dependency>
         <groupId>com.fasterxml.jackson.core</groupId>
         <artifactId>jackson-databind</artifactId>
      </dependency>
      <dependency>
         <groupId>org.eclipse.jetty</groupId>
         <artifactId>jetty-server</artifactId>
      </dependency>
      <dependency>
         <groupId>org.eclipse.jetty</groupId>
         <artifactId>jetty-servlet</artifactId>
      </dependency>
      <dependency>
         <groupId>javax.servlet</groupId>
         <artifactId>javax.servlet-api</artifactId>
         <version>3.1.0</version>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-context</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-beans</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-web</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-webmvc</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework.security</groupId>
         <artifactId>spring-security-config</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework.security</groupId>
         <artifactId>spring-security-core</artifactId>
      </dependency>
      <dependency>
        <groupId>org.springframework.security</groupId>
        <artifactId>spring-security-web</artifactId>
        <scope>runtime</scope>
      </dependency>

      <dependency>
         <!-- TODO: The JDBC Driver should be set as shared library. How to set the default one ? -->
         <groupId>com.h2database</groupId>
         <artifactId>h2</artifactId>
         <version>1.4.200</version>
         <scope>runtime</scope>
      </dependency>

      <dependency>
         <!-- JSON support -->
         <groupId>de.odysseus.staxon</groupId>
         <artifactId>staxon</artifactId>
         <version>1.3</version>
      </dependency>

      <dependency>
         <!-- The SLF bridge 'log4j-over-slf4j' is required by the flowable-engine -->
         <groupId>org.slf4j</groupId>
         <artifactId>jcl-over-slf4j</artifactId>
         <!-- scope 'provided', it is provided by the petals-bootstrap-launcher -->
      </dependency>

      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-cdk-junit</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-cdk-test-utils</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-junit-inmemoryloghandler</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-se-flowable-test-utils</artifactId>
         <version>1.4.0</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.zapodot</groupId>
         <artifactId>embedded-ldap-junit</artifactId>
         <version>0.8.1</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>jakarta.ws.rs</groupId>
         <artifactId>jakarta.ws.rs-api</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.glassfish.jersey.core</groupId>
         <artifactId>jersey-client</artifactId>
         <version>${jersey.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.glassfish.jersey.media</groupId>
         <artifactId>jersey-media-json-jackson</artifactId>
         <version>${jersey.version}</version>
         <scope>test</scope>
         <exclusions>
            <exclusion>
               <!-- Already included in com.sun.activation:jakarta.activation provided by Petals CDK -->
               <groupId>jakarta.activation</groupId>
               <artifactId>jakarta.activation-api</artifactId>
            </exclusion>
         </exclusions>
      </dependency>
      <dependency>
	     <groupId>org.glassfish.jersey.inject</groupId>
	     <artifactId>jersey-hk2</artifactId>
	     <version>${jersey.version}</version>
	     <scope>test</scope>
         <exclusions>
            <exclusion>
               <!-- We are not running in an OSGI environement, we can remove repacked AOP dependency -->
               <!-- See: https://stackoverflow.com/questions/25212944/why-does-hk2-repackage-everything -->
               <groupId>org.glassfish.hk2.external</groupId>
               <artifactId>aopalliance-repackaged</artifactId>
            </exclusion>
         </exclusions>
      </dependency>
      <dependency>
         <groupId>org.apache.mina</groupId>
         <artifactId>mina-core</artifactId>
         <version>2.1.4</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.awaitility</groupId>
         <artifactId>awaitility</artifactId>
      </dependency>
      <dependency>
         <groupId>org.hamcrest</groupId>
         <artifactId>hamcrest</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.codehaus.groovy</groupId>
         <artifactId>groovy-jsr223</artifactId>
         <version>${groovy.version}</version>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <!-- Clean unzipped files through maven-dependency-plugin -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-clean-plugin</artifactId>
            <configuration>
               <filesets>
                  <fileset>
                     <directory>${basedir}/src/test/resources/xjc</directory>
                  </fileset>
               </filesets>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
               <execution>
                  <id>analyze</id>
                  <configuration>
                     <usedDependencies>
                        <!-- These dependencies are needed for runtime -->
                        <usedDependency>org.glassfish.jersey.media:jersey-media-json-jackson</usedDependency>
                        <usedDependency>org.springframework.security:spring-security-web</usedDependency>
                        <!-- These dependencies are needed for unit test at runtime -->
                        <usedDependency>org.glassfish.jersey.inject:jersey-hk2</usedDependency>
                        <usedDependency>org.codehaus.groovy:groovy-jsr223</usedDependency>
                     </usedDependencies>
                  </configuration>
               </execution>
               <execution>
                  <!-- Don't forget to clean all unzipped files with maven-clean-plugin -->
                  <id>unpacking-for-tests</id>
                  <phase>generate-test-resources</phase>
                  <goals>
                     <goal>unpack</goal>
                  </goals>
                  <configuration>
                     <artifactItems>
                        <artifactItem>
                           <groupId>${flowable.groupId}</groupId>
                           <artifactId>flowable-cxf</artifactId>
                           <version>${flowable.version}</version>
                           <outputDirectory>${basedir}/src/test/resources/xjc</outputDirectory>
                           <includes>flowable-bindings.xjc</includes>
                           <overWrite>true</overWrite>
                        </artifactItem>
                     </artifactItems>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.jvnet.jaxb2.maven2</groupId>
            <artifactId>maven-jaxb2-plugin</artifactId>
            <executions>
               <execution>
                  <!-- must use the same id as in the parent if not there will be two executions of the plugin -->
                  <id>generate</id>
                  <goals>
                     <goal>generate</goal>
                  </goals>
                  <phase>generate-sources</phase>
                  <configuration>
                     <addCompileSourceRoot>true</addCompileSourceRoot>
                     <addTestCompileSourceRoot>false</addTestCompileSourceRoot>
                     <schemaDirectory>${basedir}/src/main/resources/</schemaDirectory>
                     <schemaIncludes>
                        <include>component.wsdl</include>
                     </schemaIncludes>
                  </configuration>
               </execution>
               <execution>
                  <id>generate-test</id>
                  <goals>
                     <goal>generate</goal>
                  </goals>
                  <phase>process-test-resources</phase>
                  <configuration>
                     <addCompileSourceRoot>false</addCompileSourceRoot>
                     <addTestCompileSourceRoot>true</addTestCompileSourceRoot>
                     <bindingDirectory>${basedir}/src/test/resources/xjc</bindingDirectory>
                     <bindingIncludes>
                        <!-- As required by flowable-cxf, the JAXB binding must manage dates with type 
                             'Date' instead of default type 'XMLGregorianCalendar' -->
                        <include>flowable-bindings.xjc</include>
                     </bindingIncludes>
                     <schemaDirectory>${basedir}/src/test/resources/</schemaDirectory>
                     <schemaIncludes>
                        <include>su/vacation/vacationRequest.wsdl</include>
                        <include>su/vacation/archivageService.wsdl</include>
                        <include>su/multi-start/multi-start.wsdl</include>
                        <include>su/multi-start/archivageService.wsdl</include>
                        <include>su/multi-start/coreService.wsdl</include>
                        <include>su/call-activity/call-activity.wsdl</include>
                        <include>su/call-activity/archivageService.wsdl</include>
                        <include>su/call-activity/coreService.wsdl</include>
                        <include>su/intermediate-message-catch-event/intermediate-message-catch-event.wsdl</include>
                        <include>su/intermediate-message-catch-event/intermediate-message-catch-event-loop.wsdl</include>
                        <include>su/placeholders/placeholders.wsdl</include>
                        <include>su/placeholders/archivageService.wsdl</include>
                        <include>su/in-only/in-only.wsdl</include>
                        <include>su/in-only/archivageService.wsdl</include>
                        <include>su/robust-in-only/robust-in-only.wsdl</include>
                        <include>su/robust-in-only/archivageService.wsdl</include>
                        <include>su/robustified-in-only/robustified-in-only.wsdl</include>
                        <include>su/robustified-in-only/archivageService.wsdl</include>
                        <include>su/start-stop/start-stop.wsdl</include>
                        <include>su/structured-variable/structured-variable.wsdl</include>
                        <include>su/structured-variable/alarm.wsdl</include>
                        <include>su/timeout/timeout.wsdl</include>
                        <include>su/timeout/archivageService.wsdl</include>
                        <include>org/ow2/petals/flowable/monit/monitFiltering.wsdl</include>
                        <include>org/ow2/petals/flowable/monit/echo.wsdl</include>
                     </schemaIncludes>
                     <generateDirectory>${project.build.directory}/generated-test-sources/xjc</generateDirectory>
                  </configuration>
               </execution>
            </executions>
         </plugin>
      </plugins>
   </build>

   <scm>
      <connection>scm:git:https://github.com/petalslink/petals-se-flowable.git</connection>
      <developerConnection>scm:git:https://github.com/petalslink/petals-se-flowable.git</developerConnection>
      <tag>HEAD</tag>
   </scm>
</project>
