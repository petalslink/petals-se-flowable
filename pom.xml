<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright (c) 2014-2020 Linagora

 This program/library is free software: you can redistribute it and/or modify
 it under the terms of the GNU Lesser General Public License as published by
 the Free Software Foundation, either version 2.1 of the License, or (at your
 option) any later version.

 This program/library is distributed in the hope that it will be useful, but
 WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License
 for more details.

 You should have received a copy of the GNU Lesser General Public License
 along with this program/library; If not, see http://www.gnu.org/licenses/
 for the GNU Lesser General Public License version 2.1.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>
   <parent>
      <artifactId>petals-cdkbased-components-parent</artifactId>
      <groupId>org.ow2.petals</groupId>
      <relativePath />
      <version>1.1.1-SNAPSHOT</version>
   </parent>

	<!-- ============== -->
	<!-- Identification -->
	<!-- ============== -->
   <name>Petals ESB - Components - SE Flowable (BPMN 2.0)</name>
   <artifactId>petals-se-flowable</artifactId>
   <groupId>org.ow2.petals</groupId>
   <version>1.4.0-SNAPSHOT</version>
   <packaging>jbi-component</packaging>
   <description>BPMN Service Engine based on Flowable</description>

   <developers>
      <developer>
         <name>Christophe DENEUX</name>
         <email>cdeneux@linagora.com</email>
         <id>cdeneux</id>
         <organization>Linagora</organization>
         <organizationUrl>http://www.linagora.com</organizationUrl>
         <roles>
            <role>Technical leader</role>
         </roles>
         <timezone>+1</timezone>
      </developer>
      <developer>
         <name>Bertrand ESCUDIE</name>
         <email>bescudie@linagora.com</email>
         <id>bescudie</id>
         <organization>Linagora</organization>
         <organizationUrl>http://www.linagora.com</organizationUrl>
         <roles>
            <role>Product Owner</role>
         </roles>
         <timezone>+1</timezone>
      </developer>
   </developers>

   <properties>
      <flowable.version>6.4.2</flowable.version>
      <flowable.groupId>org.flowable</flowable.groupId>
      <!-- flowable.version>6.2.1-PETALS-0</flowable.version>
      <flowable.groupId>org.ow2.petals.flowable</flowable.groupId!-->
      
      <jersey.version>2.29.1</jersey.version>
      <fasterxml.version>2.10.3</fasterxml.version>
   </properties>

   <dependencyManagement>
      <dependencies>
         <dependency>
            <!-- Align flowable-rest dependency with the one of CDK -->
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.6</version>
         </dependency>
         <dependency>
            <!-- Align JAXB-Runtime dependency over Flowable artefacts -->
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-runtime</artifactId>
            <version>2.3.2</version>
         </dependency>
         <dependency>
            <!-- Align JAXB-XJC dependency over Flowable artefacts -->
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-xjc</artifactId>
            <version>2.3.2</version>
         </dependency>
         <dependency>
            <!-- Align JAXB coming with EasyWSDL with the one provided with Flowable artefacts -->
            <groupId>org.ow2.easywsdl</groupId>
            <artifactId>easywsdl-wsdl</artifactId>
            <version>2.7.1-SNAPSHOT</version>
            <exclusions>
               <exclusion>
                  <!-- We prefer to use JaxB 2.3.2 coming with Flowable -->
                  <!-- TODO: This exclusion could be removed moving Petals to Java 9 or higher if included in JDK-->
                  <groupId>com.sun.xml.bind</groupId>
                  <artifactId>jaxb-core</artifactId>
               </exclusion>
               <exclusion>
                  <!-- We prefer to use JaxB 2.3.2 coming with Flowable -->
                  <!-- TODO: This exclusion could be removed moving Petals to Java 9 or higher if included in JDK -->
                  <groupId>com.sun.xml.bind</groupId>
                  <artifactId>jaxb-impl</artifactId>
               </exclusion>
            </exclusions>
         </dependency>
         <dependency>
            <!-- Align flowable-rest dependency with the one of Flowable's Jackson
                 jackson-annotations is set to 2.9.0 in the bom but some dependencies
                 are using the full version -->
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${fasterxml.version}</version>
         </dependency>
         <dependency>
            <!-- Align Jetty version over Apache CXF, Flowable and Petals. -->
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-bom</artifactId>
            <version>9.4.18.v20190429</version>
            <scope>import</scope>
            <type>pom</type>
         </dependency>
         <dependency>
            <!-- Align spring dependencies with the ones of Flowable -->
            <groupId>org.springframework</groupId>
            <artifactId>spring-framework-bom</artifactId>
            <version>5.1.8.RELEASE</version>
            <scope>import</scope>
            <type>pom</type>
         </dependency>
         <dependency>
            <!-- Align spring dependencies with the ones of Flowable -->
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-bom</artifactId>
            <version>5.1.5.RELEASE</version>
            <scope>import</scope>
            <type>pom</type>
         </dependency>
         <dependency>
            <groupId>${flowable.groupId}</groupId>
            <artifactId>flowable-engine</artifactId>
            <version>${flowable.version}</version>
            <exclusions>
               <exclusion>
                  <!-- Already included in Java 8 -->
                  <groupId>javax.activation</groupId>
                  <artifactId>activation</artifactId>
               </exclusion>
               <exclusion>
                  <!-- The SLF bridge 'jcl-over-slf4j' is used to redirect JCL calls to SLF4J API,
                       so commons-logging must be excluded -->
                  <groupId>commons-logging</groupId>
                  <artifactId>commons-logging</artifactId>
               </exclusion>
               <exclusion>
                  <!-- We prefer to use the SLF bridge 'jcl-over-slf4j' to redirect JCL calls to SLF4J API -->
                  <groupId>org.springframework</groupId>
                  <artifactId>spring-jcl</artifactId>
               </exclusion>
            </exclusions>
         </dependency>
         <dependency>
            <!-- flowable-cxf add support of WSDL-based services to the Flowable engine to call Petals services -->
            <groupId>${flowable.groupId}</groupId>
            <artifactId>flowable-cxf</artifactId>
            <version>${flowable.version}</version>
            <exclusions>
               <exclusion>
                  <!-- Already included in Java 8 -->
                  <groupId>javax.xml.bind</groupId>
                  <artifactId>jaxb-api</artifactId>
               </exclusion>
            </exclusions>
         </dependency>
         <dependency>
            <!-- Align dependency 'jakarta.annotation:jakarta.annotation-api' between Jersey and Glassfish HK2 -->
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
            <version>1.3.5</version>
         </dependency>
      </dependencies>
   </dependencyManagement>

   <dependencies>
      <dependency>
         <groupId>org.ow2.easycommons</groupId>
         <artifactId>easycommons-util</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.easycommons</groupId>
         <artifactId>easycommons-lang</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.easycommons</groupId>
         <artifactId>easycommons-uuid</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.easycommons</groupId>
         <artifactId>easycommons-stream</artifactId>
      </dependency>
      <dependency>
         <groupId>org.apache.commons</groupId>
         <artifactId>commons-pool2</artifactId>
      </dependency>
      <dependency>
         <groupId>org.jvnet.jaxb2_commons</groupId>
         <artifactId>jaxb2-basics-runtime</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-commons-log</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.easywsdl</groupId>
         <artifactId>easywsdl-wsdl</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-cdk-core</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-cdk-api</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-jbi</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-jbi-descriptor</artifactId>
         <!-- This dependency is directly used by unit tests but it is also
              a transitive dependency of CDK, so we can't use scope 'test' -->
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-cdk-jbidescriptor</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-cdk-steplog</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-message-exchange</artifactId>
         <version>1.3.0</version>
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-probes-api</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-cdk-clientserver-api</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-basis-api</artifactId>
         <version>1.1.1-SNAPSHOT</version>
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-se-flowable-clientserver-api</artifactId>
         <version>1.2.0-SNAPSHOT</version>
      </dependency>
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-engine-common-api</artifactId>
         <version>${flowable.version}</version>
      </dependency>
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-engine-common</artifactId>
         <version>${flowable.version}</version>
      </dependency>
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-engine</artifactId>
      </dependency>
      <dependency>
         <groupId>org.mybatis</groupId>
         <artifactId>mybatis</artifactId>
         <version>3.5.1</version>
      </dependency>
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-bpmn-converter</artifactId>
         <version>${flowable.version}</version>
      </dependency>
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-bpmn-model</artifactId>
         <version>${flowable.version}</version>
      </dependency>
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-idm-api</artifactId>
         <version>${flowable.version}</version>
      </dependency>
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-idm-engine</artifactId>
         <version>${flowable.version}</version>
         <exclusions>
            <exclusion>
               <!-- The SLF bridge 'jcl-over-slf4j' is used to redirect JCL calls to SLF4J API,
                    so commons-logging must be excluded -->
               <groupId>commons-logging</groupId>
               <artifactId>commons-logging</artifactId>
            </exclusion>
         </exclusions>
      </dependency>
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-idm-engine-configurator</artifactId>
         <version>${flowable.version}</version>
      </dependency>
      <dependency>
         <!-- flowable-cxf add support of WSDL-based services to the Flowable engine to call Petals services -->
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-cxf</artifactId>
      </dependency>
      <dependency>
         <!-- Dependency required by the Petals transporter. The version must be aligned with the CXF embedded by flowable-cxf. -->
         <groupId>org.apache.cxf</groupId>
         <artifactId>cxf-core</artifactId>
         <version>3.3.2</version>
      </dependency>
      <dependency>
         <!-- flowable-ldap add support of LDAP integration -->
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-ldap</artifactId>
         <version>${flowable.version}</version>
      </dependency>
      <dependency>
         <!-- flowable-ldap-configurator add support of LDAP integration -->
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-ldap-configurator</artifactId>
         <version>${flowable.version}</version>
      </dependency>
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-job-service-api</artifactId>
         <version>${flowable.version}</version>
      </dependency>
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-job-service</artifactId>
         <version>${flowable.version}</version>
      </dependency>
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-task-service-api</artifactId>
         <version>${flowable.version}</version>
      </dependency>
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-task-service</artifactId>
         <version>${flowable.version}</version>
      </dependency>
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-variable-service-api</artifactId>
         <version>${flowable.version}</version>
      </dependency>

      <!-- Flowable REST API dependencies -->
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-rest</artifactId>
         <version>${flowable.version}</version>
      </dependency>
      <dependency>
         <groupId>${flowable.groupId}</groupId>
         <artifactId>flowable-common-rest</artifactId>
         <version>${flowable.version}</version>
         <exclusions>
            <exclusion>
               <!-- We prefer to use the SLF bridge 'jcl-over-slf4j' to redirect JCL calls to SLF4J API -->
               <groupId>org.springframework</groupId>
               <artifactId>spring-jcl</artifactId>
            </exclusion>
         </exclusions>
      </dependency>
      <dependency>
         <groupId>com.fasterxml.jackson.core</groupId>
         <artifactId>jackson-databind</artifactId>
         <version>${fasterxml.version}</version>
      </dependency>
      <dependency>
         <groupId>org.eclipse.jetty</groupId>
         <artifactId>jetty-server</artifactId>
      </dependency>
      <dependency>
         <groupId>org.eclipse.jetty</groupId>
         <artifactId>jetty-servlet</artifactId>
      </dependency>
      <dependency>
         <groupId>javax.servlet</groupId>
         <artifactId>javax.servlet-api</artifactId>
         <version>3.1.0</version>
      </dependency>
      <dependency>
         <!-- TODO: This exclusion could be removed moving Petals to Java 9 or higher if included in JDK -->
         <groupId>jakarta.xml.bind</groupId>
         <artifactId>jakarta.xml.bind-api</artifactId>
         <version>2.3.2</version>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-web</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-webmvc</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-context</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-beans</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework.security</groupId>
         <artifactId>spring-security-core</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework.security</groupId>
         <artifactId>spring-security-config</artifactId>
      </dependency>
      <dependency>
        <groupId>org.springframework.security</groupId>
        <artifactId>spring-security-web</artifactId>
    </dependency>

      <dependency>
         <!-- TODO: The JDBC Driver should be set as shared library. How to set the default one ? -->
         <groupId>com.h2database</groupId>
         <artifactId>h2</artifactId>
         <version>1.4.178</version>
         <scope>runtime</scope>
      </dependency>

      <dependency>
         <!-- The SLF bridge 'jcl-over-slf4j' is required by the flowable-engine -->
         <groupId>org.slf4j</groupId>
         <artifactId>jcl-over-slf4j</artifactId>
         <!-- scope 'provided', it is provided by the petals-bootstrap-launcher -->
      </dependency>

      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-cdk-junit</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-cdk-test-utils</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-junit-external-resources</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.ow2.petals</groupId>
         <artifactId>petals-se-flowable-test-utils</artifactId>
         <version>1.4.0-SNAPSHOT</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.zapodot</groupId>
         <artifactId>embedded-ldap-junit</artifactId>
         <version>0.5.2</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>jakarta.ws.rs</groupId>
         <artifactId>jakarta.ws.rs-api</artifactId>
         <version>2.1.6</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.glassfish.jersey.core</groupId>
         <artifactId>jersey-client</artifactId>
         <version>${jersey.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.glassfish.jersey.media</groupId>
         <artifactId>jersey-media-json-jackson</artifactId>
         <version>${jersey.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
	     <groupId>org.glassfish.jersey.inject</groupId>
	     <artifactId>jersey-hk2</artifactId>
	     <version>${jersey.version}</version>
	     <scope>test</scope>
         <exclusions>
            <exclusion>
               <!-- We are not running in an OSGI environement, we can remove repacked AOP dependency -->
               <!-- See: https://stackoverflow.com/questions/25212944/why-does-hk2-repackage-everything -->
               <groupId>org.glassfish.hk2.external</groupId>
               <artifactId>aopalliance-repackaged</artifactId>
            </exclusion>
         </exclusions>
      </dependency>
      <dependency>
         <groupId>org.hamcrest</groupId>
         <artifactId>hamcrest-core</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.apache.mina</groupId>
         <artifactId>mina-core</artifactId>
         <version>2.0.4</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>com.jayway.awaitility</groupId>
         <artifactId>awaitility</artifactId>
      </dependency>
      <dependency>
         <groupId>org.codehaus.groovy</groupId>
         <artifactId>groovy-all</artifactId>
         <version>2.4.15</version>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
               <execution>
                  <id>analyze</id>
                  <configuration>
                     <usedDependencies>
                        <!-- These dependencies are needed for runtime -->
                        <usedDependency>org.glassfish.jersey.media:jersey-media-json-jackson</usedDependency>
                        <usedDependency>org.springframework.security:spring-security-web</usedDependency>
                        <!-- These dependencies are needed for test at runtime -->
                        <usedDependency>org.glassfish.jersey.inject:jersey-hk2</usedDependency>
                        <usedDependency>org.codehaus.groovy:groovy-all</usedDependency>
                     </usedDependencies>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.jvnet.jaxb2.maven2</groupId>
            <artifactId>maven-jaxb2-plugin</artifactId>
            <executions>
               <execution>
                  <!-- must use the same id as in the parent if not there will be two executions of the plugin -->
                  <id>generate</id>
                  <goals>
                     <goal>generate</goal>
                  </goals>
                  <phase>generate-sources</phase>
                  <configuration>
                     <addCompileSourceRoot>true</addCompileSourceRoot>
                     <addTestCompileSourceRoot>false</addTestCompileSourceRoot>
                     <schemaDirectory>${basedir}/src/main/resources/</schemaDirectory>
                     <schemaIncludes>
                        <include>component.wsdl</include>
                     </schemaIncludes>
                  </configuration>
               </execution>
               <execution>
                  <id>generate-test</id>
                  <goals>
                     <goal>generate</goal>
                  </goals>
                  <phase>generate-test-sources</phase>
                  <configuration>
                     <addCompileSourceRoot>false</addCompileSourceRoot>
                     <addTestCompileSourceRoot>true</addTestCompileSourceRoot>
                     <schemaDirectory>${basedir}/src/test/resources/</schemaDirectory>
                     <schemaIncludes>
                        <include>su/vacation/vacationRequest.wsdl</include>
                        <include>su/vacation/archivageService.wsdl</include>
                        <include>su/multi-start/multi-start.wsdl</include>
                        <include>su/multi-start/archivageService.wsdl</include>
                        <include>su/multi-start/coreService.wsdl</include>
                        <include>su/call-activity/call-activity.wsdl</include>
                        <include>su/call-activity/archivageService.wsdl</include>
                        <include>su/call-activity/coreService.wsdl</include>
                        <include>su/intermediate-message-catch-event/intermediate-message-catch-event.wsdl</include>
			<include>su/intermediate-message-catch-event/intermediate-message-catch-event-loop.wsdl</include>
                        <include>su/placeholders/placeholders.wsdl</include>
                        <include>su/placeholders/archivageService.wsdl</include>
                        <include>su/in-only/in-only.wsdl</include>
                        <include>su/in-only/archivageService.wsdl</include>
                        <include>su/robust-in-only/robust-in-only.wsdl</include>
                        <include>su/robust-in-only/archivageService.wsdl</include>
                        <include>su/robustified-in-only/robustified-in-only.wsdl</include>
                        <include>su/robustified-in-only/archivageService.wsdl</include>
                        <include>su/start-stop/start-stop.wsdl</include>
                        <include>su/timeout/timeout.wsdl</include>
                        <include>su/timeout/archivageService.wsdl</include>
                        <include>org/ow2/petals/flowable/monit/monitFiltering.wsdl</include>
                        <include>org/ow2/petals/flowable/monit/echo.wsdl</include>
                     </schemaIncludes>
                     <generateDirectory>${project.build.directory}/generated-test-sources/xjc</generateDirectory>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.basepom.maven</groupId>
            <artifactId>duplicate-finder-maven-plugin</artifactId>
            <executions>
               <execution>
                  <id>enforce-no-duplicate-classes</id>
                  <configuration>
                     <!-- these conflicts, but they are only used (and needed!) during tests! -->
                     <ignoredDependencies>
                     <dependency>
                        <!--
                           This dependency contains duplicate and different classes with javax.annotation:jsr250-api. As
                           this dependency is used only for unit test, no check is required against javax.annotation:jsr250-api
                           used at runtime.
                         -->
                        <groupId>jakarta.annotation</groupId>
                        <artifactId>jakarta.annotation-api</artifactId>
                     </dependency>
                     </ignoredDependencies>
                  </configuration>
               </execution>
            </executions>
         </plugin>
      </plugins>
   </build>

   <scm>
      <connection>scm:git:https://github.com/petalslink/petals-se-flowable.git</connection>
      <developerConnection>scm:git:https://github.com/petalslink/petals-se-flowable.git</developerConnection>
      <tag>HEAD</tag>
   </scm>
</project>
