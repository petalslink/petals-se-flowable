<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright (c) 2019-2024 Linagora
 
 This program/library is free software: you can redistribute it and/or modify
 it under the terms of the GNU Lesser General Public License as published by
 the Free Software Foundation, either version 2.1 of the License, or (at your
 option) any later version.
 
 This program/library is distributed in the hope that it will be useful, but
 WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License
 for more details.
 
 You should have received a copy of the GNU Lesser General Public License
 along with this program/library; If not, see http://www.gnu.org/licenses/
 for the GNU Lesser General Public License version 2.1.
--><con:soapui-project id="02a75964-5f8a-492f-a2ea-160355c48f52" activeEnvironment="Default" name="Petals Sample - Flowable - Traveling Process - Unit tests" resourceRoot="" soapui-version="5.3.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" id="24375967-a5ad-44d4-bc4b-5d47d439384f" wsaVersion="NONE" name="notifyTravelingBinding" type="wsdl" bindingName="{http://petals.ow2.org/samples/se-flowable/traveling/notifyTravelingService}notifyTravelingBinding" soapVersion="1_1" anonymous="optional" definition="file:/home/cdeneux/workspace/petals-se-flowable-1.1.x/samples/su-SOAP-notifyTravelingService-provide/src/main/jbi/notifyTravelingService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/home/cdeneux/workspace/petals-se-flowable-1.1.x/samples/su-SOAP-notifyTravelingService-provide/src/main/jbi/notifyTravelingService.wsdl"><con:part><con:url>file:/home/cdeneux/workspace/petals-se-flowable-1.1.x/samples/su-SOAP-notifyTravelingService-provide/src/main/jbi/notifyTravelingService.wsdl</con:url><con:content><![CDATA[<!--Copyright (c) 2019 Linagora
 
 This program/library is free software: you can redistribute it and/or modify
 it under the terms of the GNU Lesser General Public License as published by
 the Free Software Foundation, either version 2.1 of the License, or (at your
 option) any later version.
 
 This program/library is distributed in the hope that it will be useful, but
 WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License
 for more details.
 
 You should have received a copy of the GNU Lesser General Public License
 along with this program/library; If not, see http://www.gnu.org/licenses/
 for the GNU Lesser General Public License version 2.1.-->
<wsdl:definitions name="notifyTravelingService" targetNamespace="http://petals.ow2.org/samples/se-flowable/traveling/notifyTravelingService" xmlns:notifyService="http://petals.ow2.org/samples/se-flowable/traveling/notifyTravelingService" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <!--TODO: JAX-WS Wrapped mode is mandatory. We could be able to work with Bare mode
        JAX-WS Wrapped requires:
           - The operation's input and output message (if present) each contain only a single part
           - The input message part refers to a global element declaration whose local name is equal to the operation name
           - The output message part refers to a global element declaration
           - wrapper element should be pure complex type
           - element reference is not permitted for wrapper element-->
  <wsdl:types>
    <xsd:schema targetNamespace="http://petals.ow2.org/samples/se-flowable/traveling/notifyTravelingService">
      <xsd:element name="newTravelingRequest">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="enquirer" minOccurs="1" maxOccurs="1" type="xsd:string"/>
            <xsd:element name="day-number" minOccurs="1" maxOccurs="1" type="xsd:long"/>
            <xsd:element name="start-date" minOccurs="1" maxOccurs="1" type="xsd:dateTime"/>
            <xsd:element name="travelingRequestId" type="xsd:string" minOccurs="1" maxOccurs="1"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="travelingRequestApproved">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="enquirer" minOccurs="1" maxOccurs="1" type="xsd:string"/>
            <xsd:element name="day-number" minOccurs="1" maxOccurs="1" type="xsd:long"/>
            <xsd:element name="start-date" minOccurs="1" maxOccurs="1" type="xsd:dateTime"/>
            <xsd:element name="travelingRequestId" type="xsd:string" minOccurs="1" maxOccurs="1"/>
            <xsd:element name="approved-by" type="xsd:string" minOccurs="1" maxOccurs="1"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="travelingRequestRejected">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="enquirer" minOccurs="1" maxOccurs="1" type="xsd:string"/>
            <xsd:element name="day-number" minOccurs="1" maxOccurs="1" type="xsd:long"/>
            <xsd:element name="start-date" minOccurs="1" maxOccurs="1" type="xsd:dateTime"/>
            <xsd:element name="travelingRequestId" type="xsd:string" minOccurs="1" maxOccurs="1"/>
            <xsd:element name="approved-by" type="xsd:string" minOccurs="1" maxOccurs="1"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="newTravelingRequestMessage">
    <wsdl:part name="newTravelingRequestPart" element="notifyService:newTravelingRequest"/>
  </wsdl:message>
  <wsdl:message name="travelingRequestApprovedRequest">
    <wsdl:part name="parameters" element="notifyService:travelingRequestApproved"/>
  </wsdl:message>
  <wsdl:message name="travelingRequestRejectedRequest">
    <wsdl:part name="parameters" element="notifyService:travelingRequestRejected"/>
  </wsdl:message>
  <wsdl:portType name="notifyTraveling">
    <wsdl:operation name="newTravelingRequest">
      <wsdl:input message="notifyService:newTravelingRequestMessage" name="newTravelingRequestInput"/>
    </wsdl:operation>
    <wsdl:operation name="travelingRequestApproved">
      <wsdl:input message="notifyService:travelingRequestApprovedRequest" name="travelingRequestApproved"/>
    </wsdl:operation>
    <wsdl:operation name="travelingRequestRejected">
      <wsdl:input message="notifyService:travelingRequestRejectedRequest" name="travelingRequestRejected"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="notifyTravelingBinding" type="notifyService:notifyTraveling">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="newTravelingRequest">
      <soap:operation soapAction="http://petals.ow2.org/samples/se-flowable/traveling/notifyService/newTravelingRequest"/>
      <wsdl:input name="newTravelingRequestInput">
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="travelingRequestApproved">
      <soap:operation soapAction="http://petals.ow2.org/samples/se-flowable/traveling/notifyService/travelingRequestApproved"/>
      <wsdl:input name="travelingRequestApproved">
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="travelingRequestRejected">
      <soap:operation soapAction="http://petals.ow2.org/samples/se-flowable/traveling/notifyService/travelingRequestRejected"/>
      <wsdl:input name="travelingRequestRejected">
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="notifyTravelingService">
    <wsdl:port name="autogenerate" binding="notifyService:notifyTravelingBinding">
      <!--TODO: We should use an XML binding instead of SOAP binding to avoid to rework SOAP enveloppe on requests/replies
                    exchanged between Flowable and Petals-->
      <!--TODO: Trouver un formalisme pour l'URL Petals: "petals:///interfacename[:servicename[:endpointname]]"-->
      <soap:address location="petals:///{http://petals.ow2.org/samples/se-flowable/traveling/notifyTravelingService}notifyTraveling"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://cdeneux-laptop:8188/mocknotifyTravelingBinding</con:endpoint><con:endpoint>petals:///{http://petals.ow2.org/samples/se-flowable/traveling/notifyTravelingService}notifyTraveling</con:endpoint></con:endpoints><con:operation id="42af73a0-cada-4ef6-9074-799586c7a7a7" isOneWay="false" action="http://petals.ow2.org/samples/se-flowable/traveling/notifyService/newTravelingRequest" name="newTravelingRequest" bindingOperationName="newTravelingRequest" type="One-Way" inputName="newTravelingRequestInput" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="6ed79b41-20dc-400a-9de5-73ff284c0de2" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>petals:///{http://petals.ow2.org/samples/se-flowable/traveling/notifyTravelingService}notifyTraveling</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:not="http://petals.ow2.org/samples/se-flowable/traveling/notifyTravelingService">
   <soapenv:Header/>
   <soapenv:Body>
      <not:newTravelingRequest>
         <enquirer>?</enquirer>
         <day-number>?</day-number>
         <start-date>?</start-date>
         <travelingRequestId>?</travelingRequestId>
      </not:newTravelingRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://petals.ow2.org/samples/se-flowable/traveling/notifyService/newTravelingRequest"/></con:call></con:operation><con:operation id="c8286b88-8e4d-41f6-b8cc-9f10010cf8be" isOneWay="false" action="http://petals.ow2.org/samples/se-flowable/traveling/notifyService/travelingRequestApproved" name="travelingRequestApproved" bindingOperationName="travelingRequestApproved" type="One-Way" inputName="travelingRequestApproved" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b8830893-78ae-47bc-a701-1f52b1eb4d58" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>petals:///{http://petals.ow2.org/samples/se-flowable/traveling/notifyTravelingService}notifyTraveling</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:not="http://petals.ow2.org/samples/se-flowable/traveling/notifyTravelingService">
   <soapenv:Header/>
   <soapenv:Body>
      <not:travelingRequestApproved>
         <enquirer>?</enquirer>
         <day-number>?</day-number>
         <start-date>?</start-date>
         <travelingRequestId>?</travelingRequestId>
         <approved-by>?</approved-by>
      </not:travelingRequestApproved>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://petals.ow2.org/samples/se-flowable/traveling/notifyService/travelingRequestApproved"/></con:call></con:operation><con:operation id="5278ac01-e315-4319-a3a9-4f701aaababa" isOneWay="false" action="http://petals.ow2.org/samples/se-flowable/traveling/notifyService/travelingRequestRejected" name="travelingRequestRejected" bindingOperationName="travelingRequestRejected" type="One-Way" inputName="travelingRequestRejected" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="0f38465c-c1b2-4777-afae-434c1ae57e8e" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>petals:///{http://petals.ow2.org/samples/se-flowable/traveling/notifyTravelingService}notifyTraveling</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:not="http://petals.ow2.org/samples/se-flowable/traveling/notifyTravelingService">
   <soapenv:Header/>
   <soapenv:Body>
      <not:travelingRequestRejected>
         <enquirer>?</enquirer>
         <day-number>?</day-number>
         <start-date>?</start-date>
         <travelingRequestId>?</travelingRequestId>
         <approved-by>?</approved-by>
      </not:travelingRequestRejected>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://petals.ow2.org/samples/se-flowable/traveling/notifyService/travelingRequestRejected"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="a7e89439-c92d-44d0-9a9c-fbd1f0fd5d20" wsaVersion="NONE" name="bookingBinding" type="wsdl" bindingName="{http://petals.ow2.org/samples/se-flowable/traveling/bookingService}bookingBinding" soapVersion="1_1" anonymous="optional" definition="file:/home/cdeneux/workspace/petals-se-flowable-1.1.x/samples/su-SOAP-bookingService-provide/src/main/jbi/bookingService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/home/cdeneux/workspace/petals-se-flowable-1.1.x/samples/su-SOAP-bookingService-provide/src/main/jbi/bookingService.wsdl"><con:part><con:url>file:/home/cdeneux/workspace/petals-se-flowable-1.1.x/samples/su-SOAP-bookingService-provide/src/main/jbi/bookingService.wsdl</con:url><con:content><![CDATA[<!--Copyright (c) 2019 Linagora
 
 This program/library is free software: you can redistribute it and/or modify
 it under the terms of the GNU Lesser General Public License as published by
 the Free Software Foundation, either version 2.1 of the License, or (at your
 option) any later version.
 
 This program/library is distributed in the hope that it will be useful, but
 WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License
 for more details.
 
 You should have received a copy of the GNU Lesser General Public License
 along with this program/library; If not, see http://www.gnu.org/licenses/
 for the GNU Lesser General Public License version 2.1.-->
<wsdl:definitions name="bookingService" targetNamespace="http://petals.ow2.org/samples/se-flowable/traveling/bookingService" xmlns:bookingService="http://petals.ow2.org/samples/se-flowable/traveling/bookingService" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <!--TODO: JAX-WS Wrapped mode is mandatory. We could be able to work with Bare mode
        JAX-WS Wrapped requires:
           - The operation's input and output message (if present) each contain only a single part
           - The input message part refers to a global element declaration whose local name is equal to the operation name
           - The output message part refers to a global element declaration
           - wrapper element should be pure complex type
           - element reference is not permitted for wrapper element-->
  <wsdl:types>
    <xsd:schema targetNamespace="http://petals.ow2.org/samples/se-flowable/traveling/bookingService">
      <xsd:element name="booksTrains">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="train" minOccurs="1" maxOccurs="unbounded">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element name="startFrom" type="xsd:string" minOccurs="1" maxOccurs="1"/>
                  <xsd:element name="endTo" type="xsd:string" minOccurs="1" maxOccurs="1"/>
                  <xsd:element name="date" type="xsd:dateTime" minOccurs="1" maxOccurs="1"/>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="booksPlanes">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="plane" minOccurs="1" maxOccurs="unbounded">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element name="startFrom" type="xsd:string" minOccurs="1" maxOccurs="1"/>
                  <xsd:element name="endTo" type="xsd:string" minOccurs="1" maxOccurs="1"/>
                  <xsd:element name="date" type="xsd:dateTime" minOccurs="1" maxOccurs="1"/>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="booksHotels">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="hotel" minOccurs="1" maxOccurs="unbounded">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element name="address" type="xsd:string" minOccurs="1" maxOccurs="1"/>
                  <xsd:element name="startDate" type="xsd:dateTime" minOccurs="1" maxOccurs="1"/>
                  <xsd:element name="endDate" type="xsd:dateTime" minOccurs="1" maxOccurs="1"/>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getReservations">
        <xsd:complexType>
          <xsd:sequence/>
        </xsd:complexType>
      </xsd:element>
      <xsd:complexType name="TReservations">
        <xsd:sequence>
          <xsd:element name="reservation" minOccurs="0" maxOccurs="unbounded">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="type" type="xsd:string" minOccurs="1" maxOccurs="1"/>
                <xsd:element name="date" type="xsd:dateTime" minOccurs="1" maxOccurs="1"/>
                <xsd:element name="price" type="xsd:double" minOccurs="1" maxOccurs="1"/>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="getReservationsResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="reservations" type="bookingService:TReservations" minOccurs="1" maxOccurs="1"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="booksTrainsMessage">
    <wsdl:part name="booksTrainsPart" element="bookingService:booksTrains"/>
  </wsdl:message>
  <wsdl:message name="booksPlanesMessage">
    <wsdl:part name="booksPlanesPart" element="bookingService:booksPlanes"/>
  </wsdl:message>
  <wsdl:message name="booksHotelsMessage">
    <wsdl:part name="booksHotelsPart" element="bookingService:booksHotels"/>
  </wsdl:message>
  <wsdl:message name="getReservationsMessage">
    <wsdl:part name="getReservations" element="bookingService:getReservations"/>
  </wsdl:message>
  <wsdl:message name="getReservationsResponseMessage">
    <wsdl:part name="getReservationsResponse" element="bookingService:getReservationsResponse"/>
  </wsdl:message>
  <wsdl:portType name="booking">
    <wsdl:operation name="booksTrains">
      <wsdl:input message="bookingService:booksTrainsMessage" name="booksTrainsInput"/>
    </wsdl:operation>
    <wsdl:operation name="booksPlanes">
      <wsdl:input message="bookingService:booksPlanesMessage" name="booksPlanesInput"/>
    </wsdl:operation>
    <wsdl:operation name="booksHotels">
      <wsdl:input message="bookingService:booksHotelsMessage" name="booksHotelsInput"/>
    </wsdl:operation>
    <wsdl:operation name="getReservations">
      <wsdl:input message="bookingService:getReservationsMessage" name="getReservationsInput"/>
      <wsdl:output message="bookingService:getReservationsResponseMessage" name="getReservationsOutput"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="bookingBinding" type="bookingService:booking">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="booksTrains">
      <soap:operation soapAction="http://petals.ow2.org/samples/se-flowable/traveling/bookingService/booksTrains"/>
      <wsdl:input name="booksTrainsInput">
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="booksPlanes">
      <soap:operation soapAction="http://petals.ow2.org/samples/se-flowable/traveling/bookingService/booksPlanes"/>
      <wsdl:input name="booksPlanesInput">
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="booksHotels">
      <soap:operation soapAction="http://petals.ow2.org/samples/se-flowable/traveling/bookingService/booksHotels"/>
      <wsdl:input name="booksHotelsInput">
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getReservations">
      <soap:operation soapAction="http://petals.ow2.org/samples/se-flowable/traveling/bookingService/getReservations"/>
      <wsdl:input name="getReservationsInput">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getReservationsOutput">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="bookingService">
    <wsdl:port name="autogenerate" binding="bookingService:bookingBinding">
      <!--TODO: We should use an XML binding instead of SOAP binding to avoid to rework SOAP enveloppe on requests/replies
                    exchanged between Flowable and Petals-->
      <!--TODO: Trouver un formalisme pour l'URL Petals: "petals:///interfacename[:servicename[:endpointname]]"-->
      <soap:address location="petals:///{http://petals.ow2.org/samples/se-flowable/traveling/bookingService}booking"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://cdeneux-laptop:8188/mockbookingBinding</con:endpoint><con:endpoint>petals:///{http://petals.ow2.org/samples/se-flowable/traveling/bookingService}booking</con:endpoint></con:endpoints><con:operation id="5b86943f-ad5a-4bb0-b70b-b05c1389b793" isOneWay="false" action="http://petals.ow2.org/samples/se-flowable/traveling/bookingService/booksHotels" name="booksHotels" bindingOperationName="booksHotels" type="One-Way" inputName="booksHotelsInput" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7e4e3246-ffa7-4658-9bfe-bfa5a301fcf5" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://cdeneux-laptop:8188/mockbookingBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:book="http://petals.ow2.org/samples/se-flowable/traveling/bookingService">
   <soapenv:Header/>
   <soapenv:Body>
      <book:booksHotels>
         <!--1 or more repetitions:-->
         <hotel>
            <address>?</address>
            <startDate>?</startDate>
            <endDate>?</endDate>
         </hotel>
      </book:booksHotels>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://petals.ow2.org/samples/se-flowable/traveling/bookingService/booksHotels"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="6793c2b1-db8c-4d61-8d9e-220e53198329" isOneWay="false" action="http://petals.ow2.org/samples/se-flowable/traveling/bookingService/booksPlanes" name="booksPlanes" bindingOperationName="booksPlanes" type="One-Way" inputName="booksPlanesInput" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation id="7bd29722-b4d4-44f8-a173-81c693378d2e" isOneWay="false" action="http://petals.ow2.org/samples/se-flowable/traveling/bookingService/booksTrains" name="booksTrains" bindingOperationName="booksTrains" type="One-Way" inputName="booksTrainsInput" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation id="42253836-4779-436d-8e7b-c39bf5625ca5" isOneWay="false" action="http://petals.ow2.org/samples/se-flowable/traveling/bookingService/getReservations" name="getReservations" bindingOperationName="getReservations" outputName="getReservationsOutput" inputName="getReservationsInput" receivesAttachments="false" sendsAttachments="false" type="Request-Response" anonymous="optional"><con:settings/></con:operation></con:interface><con:mockService id="9d1a3624-8ffe-400b-a667-e26b48c4899c" port="8188" path="/mocknotifyTravelingBinding" host="cdeneux-laptop" name="notifyTravelingBinding MockService"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.mock.WsdlMockService@require-soap-action">false</con:setting></con:settings><con:properties/><con:mockOperation name="newTravelingRequest" id="d6566412-b09a-4104-a921-04b0985a2b46" interface="notifyTravelingBinding" operation="newTravelingRequest"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:response name="Response 1" id="83698982-7b52-4fe6-8bc4-ed912105a542" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent>&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:not="http://petals.ow2.org/samples/se-flowable/vacation/notifyVacationService">
   &lt;soapenv:Header/>
   &lt;soapenv:Body />
&lt;/soapenv:Envelope></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://petals.ow2.org/samples/se-flowable/traveling/notifyService/newTravelingRequest"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="travelingRequestApproved" id="041c2f1f-5b80-4518-bdce-a6510b03fa68" interface="notifyTravelingBinding" operation="travelingRequestApproved"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:response name="Response 1" id="f33b0510-3964-4d14-a62c-a51532f5f1c4" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent>&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:not="http://petals.ow2.org/samples/se-flowable/vacation/notifyVacationService">
   &lt;soapenv:Header/>
   &lt;soapenv:Body />
&lt;/soapenv:Envelope></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://petals.ow2.org/samples/se-flowable/traveling/notifyService/travelingRequestApproved"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="travelingRequestRejected" id="b2e89c53-a460-4f68-aad3-cd783db703ee" interface="notifyTravelingBinding" operation="travelingRequestRejected"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:response name="Response 1" id="cde01709-b9db-40db-afe9-e6b5b4cb367b" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent>&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:not="http://petals.ow2.org/samples/se-flowable/vacation/notifyVacationService">
   &lt;soapenv:Header/>
   &lt;soapenv:Body />
&lt;/soapenv:Envelope></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://petals.ow2.org/samples/se-flowable/traveling/notifyService/travelingRequestRejected"/></con:response><con:dispatchConfig/></con:mockOperation></con:mockService><con:mockService id="ec5fa2c0-af62-4d6e-97b7-b77496636bda" port="8188" path="/mockbookingBinding" host="cdeneux-laptop" name="bookingBinding MockService" bindToHostOnly="false" docroot=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.mock.WsdlMockService@require-soap-action">false</con:setting></con:settings><con:properties/><con:mockOperation name="booksHotels" id="0f7cef27-bcd7-4726-9cd1-45c1c629c9c0" interface="bookingBinding" operation="booksHotels"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:response name="Response 1" id="039ccc10-5c32-4161-b831-8b776ee5529c" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent>&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:not="http://petals.ow2.org/samples/se-flowable/vacation/notifyVacationService">
   &lt;soapenv:Header/>
   &lt;soapenv:Body />
&lt;/soapenv:Envelope></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://petals.ow2.org/samples/se-flowable/traveling/bookingService/booksHotels"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="booksPlanes" id="657651c1-ddca-42c6-907e-00edf510b51e" interface="bookingBinding" operation="booksPlanes"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:response name="Response 1" id="15bc7483-bf87-46a1-b4d9-e5e2f8b350c7" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent>&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:not="http://petals.ow2.org/samples/se-flowable/vacation/notifyVacationService">
   &lt;soapenv:Header/>
   &lt;soapenv:Body />
&lt;/soapenv:Envelope></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://petals.ow2.org/samples/se-flowable/traveling/bookingService/booksPlanes"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="booksTrains" id="6c2bb0fc-11d3-4a86-ae88-030f59298558" interface="bookingBinding" operation="booksTrains"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:response name="Response 1" id="384b6b99-a233-4d3a-83c2-cf8152c662fa" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent>&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:not="http://petals.ow2.org/samples/se-flowable/vacation/notifyVacationService">
   &lt;soapenv:Header/>
   &lt;soapenv:Body />
&lt;/soapenv:Envelope></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://petals.ow2.org/samples/se-flowable/traveling/bookingService/booksTrains"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="getReservations" id="f5347f60-3842-4f27-9a3c-9dfb7065aa57" interface="bookingBinding" operation="getReservations"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:response name="Response 1" id="33e5ad83-01d2-4bfd-84e5-8bebfe4a23b3" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:book="http://petals.ow2.org/samples/se-flowable/traveling/bookingService">
   <soapenv:Header/>
   <soapenv:Body>
      <book:getReservationsResponse>
         <reservations>
            <reservation>
               <type>Train</type>
               <date>2020-01-29T21:32:00</date>
               <price>123.45</price>
            </reservation>
            <reservation>
               <type>Train</type>
               <date>2020-01-29T23:32:00</date>
               <price>13.00</price>
            </reservation>
            <reservation>
               <type>Hotel</type>
               <date>2020-01-29T00:00:00</date>
               <price>130.00</price>
            </reservation>
            <reservation>
               <type>Train</type>
               <date>2020-01-30T17:52:00</date>
               <price>345.98</price>
            </reservation>
         </reservations>
      </book:getReservationsResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://petals.ow2.org/samples/se-flowable/traveling/bookingService/getReservations"/></con:response><con:dispatchConfig/></con:mockOperation></con:mockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>